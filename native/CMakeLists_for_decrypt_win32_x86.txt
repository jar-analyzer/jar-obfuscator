cmake_minimum_required(VERSION 3.25)

################ JNI CONFIG START ################

project(native C)

set(CMAKE_C_STANDARD 11)

# INCLUDE JNI

find_package(JNI REQUIRED)

include_directories(${JNI_INCLUDE_DIRS})

################ JNI CONFIG END ##################

MESSAGE("BUILD WINDOWS")

enable_language(ASM_MASM)

add_custom_target(
        native_decrypt_asm ALL
        COMMAND ml /c /Fo${CMAKE_CURRENT_BINARY_DIR}/native_decrypt_asm.obj
        ${CMAKE_CURRENT_SOURCE_DIR}/decrypt_windows.asm
        BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/native_decrypt_asm.obj
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)

add_library(
        decrypter SHARED
        core_de.h
        start_windows.c

        xxtea_common.c
        xxtea_common.h
        xxtea_en.h
        xxtea_de.h
        xxtea.c
)

set_property(TARGET native_decrypt_asm PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>"
)

add_dependencies(decrypter native_decrypt_asm)

target_link_libraries(decrypter
        PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/native_decrypt_asm.obj
)

add_executable(
        xxtea_test
        xxtea_common.h
        xxtea_common.c
        xxtea_en.h
        xxtea_de.h
        xxtea.c
        xxtea_test.c
)

add_executable(
        decrypt_test
        core_de.h
        core_en.h
        decrypt_test.c
)

target_link_libraries(decrypt_test
        PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/native_decrypt_asm.obj
)